{"version":3,"sources":["index.js","src/css-parse.js","src/style-settings.js","src/style-util.js","src/style-transformer.js","src/style-info.js","src/style-properties.js","src/template-map.js","src/style-placeholder.js","src/style-cache.js","src/apply-shim.js","src/document-watcher.js","src/ShadyCSS.js","src/custom-style-element.js"],"names":["parse","text","clean","parseCss","lex","cssText","replace","RX","comments","port","root","start","end","length","n","i","l","OPEN_BRACE","rules","p","previous","parent","push","CLOSE_BRACE","node","t","substring","parsedCssText","trim","ss","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","s","parsedSelector","selector","atRule","indexOf","AT_START","MEDIA_START","type","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","keyframesName","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","code","arguments","repeat","stringify","preserveProperties","_hasMixinRules","removeCustomProps","removeCustomPropAssignment","removeCustomPropApply","customProp","mixinProp","mixinApply","varApply","nativeShadow","window","ShadyDOM","inUse","nativeCssVariables","navigator","userAgent","CSS","supports","detectNativeApply","style","document","createElement","textContent","head","appendChild","nativeCssApply","sheet","cssRules","removeChild","parseSettings","settings","shimcssproperties","shimshadow","ShadyCSS","WebComponents","flags","toCssText","callback","forEachRule","rulesForStyle","__cssRules","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","rx","MEDIA_MATCH","matches","applyCss","moniker","target","contextNode","createScopeStyle","applyStyle","after","nextSibling","firstChild","lastHeadApplyNode","insertBefore","setAttribute","applyStylePlaceHolder","placeHolder","createComment","scope","findMatchingParen","level","processVariableAndFallback","str","inner","prefix","suffix","comma","value","fallback","setElementClassRaw","element","__nativeSetAttribute","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","IS_VAR","BRACKETED","HOST_PREFIX","HOST_SUFFIX","SCOPE_NAME","StyleTransformer","dom","shouldRemoveScope","__styleScoped","_transformDom","nodeType","Node","ELEMENT_NODE","c$","localName","content","_content","childNodes","children","classList","remove","add","getAttribute","c","CLASS","newValue","StyleUtil.setElementClassRaw","elementStyles","styleRules","cssBuildType","__cssBuild","StyleUtil.toCssText","css","is","extends","ext","hostScope","_calcHostScope","_calcElementScope","self","isScoped","CSS_CLASS_PREFIX","_transformRule","_transformComplexSelector","transformer","transformedSelector","_transformRuleCss","p$","COMPLEX_SELECTOR_SEP","StyleUtil.isKeyframesSelector","call","join","stop","NTH","m","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","typeSelector","SELECTOR_NO_MATCH","host","documentRule","normalizeRootSelector","_transformDocumentSelector","ROOT","SCOPE_DOC_SELECTOR","RegExp","StyleInfo","__styleInfo","styleInfo","ast","placeholder","ownStylePropertyNames","elementName","typeExtension","cssBuild","overrideStyleProperties","styleProperties","scopeSelector","customStyle","Element","prototype","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","StyleProperties","decorateStyles","props","keyframes","ruleIndex","StyleUtil.forEachRule","decorateRule","index","collectPropertiesInCssText","propertyInfo","onKeyframesRule","_keyframes","names","properties","hasProperties","collectProperties","collectCssText","Object","assign","any","exec","collectConsumingCssText","name","reify","getOwnPropertyNames","valueForProperty","property","valueForProperties","fn","propertyValue","StyleUtil.processVariableAndFallback","parts","lastIndex","colon","pp","slice","applyProperties","output","applyKeyframeTransforms","keyframeTransforms","input","hasAnimations","test","transform","keyframeNamesToTransform","keyframe","propertyDataFromStyles","o","selectorToMatch","addToBitMask","key","whenHostOrRootRule","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","rxHostSelector","hostRx","get","_elementKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","applyElementScopeSelector","old","v","XSCOPE_NAME","applyElementStyle","_useCount","parentNode","StyleUtil.applyCss","shadowRoot","StyleUtil.applyStyle","applyCustomStyle","StyleUtil.rulesForStyle","StyleUtil.rx","bits","parseInt","templateMap","placeholderMap","ce","customElements","origDefine","define","clazz","options","StyleCache","typeMax","cache","cacheEntry","ownPropertyNames","idx","pn","tagname","styleElement","list","shift","entry","_validate","APPLY_NAME_CLEAN","INITIAL_INHERIT","MIXIN_VAR_SEP","MixinMap","_map","dependants","ApplyShim","_currentTemplate","_measureElement","_separator","_boundProduceCssProperties","matchText","propertyName","valueProperty","valueMixin","_produceCssProperties","transformRules","transformRule","__applyShimInvalid","transformCssText","_consumeCssProperties","all","getComputedStyle","getPropertyValue","mixinName","applyPos","afterApplyPos","textBeforeApply","textAfterApply","defaults","_cssTextToMap","replacement","_atApplyToCssProperties","fallbacks","vars","mixinEntry","set","f","_getInitialValueForProperty","out","sp","_replaceInitialOrInherit","mixinAsProperties","mixinValues","combinedProps","oldProps","create","needToInvalidate","undefined","_invalidateMixinEntry","applyShim","flush","elementNeedsScoping","contains","SVGElement","hasAttribute","handler","mxns","x","mxn","documentElement","addedNodes","getRootNode","DOCUMENT_FRAGMENT_NODE","removedNodes","classes","Array","from","classIdx","observer","MutationObserver","observe","childList","subtree","nativeCustomElements","delayedStart","body","HTMLImports","whenReady","requestAnimationFrame","readyState","listener","removeEventListener","addEventListener","takeRecords","styleCache","scopeCounter","nativeCss","_documentOwner","_documentOwnerStyleInfo","_generateScopeSelector","id","getStyleAst","styleAstToString","_gatherStyles","template","styles","querySelectorAll","_getCssBuild","querySelector","prepareTemplate","_prepared","_styleAst","_generateStaticStyle","_style","_ownPropertyNames","shadowroot","_prepareHost","_cssBuild","overrideProps","CustomStyle","CS","_documentDirty","findStyles","_updateProperties","_revalidateApplyShim","applyStyles","hasApplied","Boolean","_updateNativeProperties","_applyStyleProperties","_isRootOwner","_applyToDescendants","_styleOwnerForNode","fetch","cachedScopeSelector","cachedStyle","oldScopeSelector","store","owner","ownerStyleInfo","ownerProperties","hostAndRootProps","propertyData","propertiesMatchingHost","_mixinOverrideStyles","overrides","removeProperty","setProperty","updateStyles","_transformCustomStyleForDocument","_applyCustomStyleToDocument","getComputedStyleValue","setElementClass","classString","scopeName","classAttr","k$","_styleInfoForNode","enqueued","customStyles","hookFn","enqueueDocumentValidation","validateDocument","_elementsHaveApplied","__appliedElement","attributes","attr","HTMLElement"],"mappings":"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","file":"shadycss.min.js","sourcesContent":["/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n'use strict';\r\n\r\n/*\r\nSmall module to load ShadyCSS and CustomStyle together\r\n*/\r\n\r\nimport './src/ShadyCSS'\r\nimport './src/custom-style-element'\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n/*\r\nExtremely simple css parser. Intended to be not more than what we need\r\nand definitely not necessarily correct =).\r\n*/\r\n\r\n'use strict';\r\n\r\n// given a string of css, return a simple rule tree\r\nexport function parse(text) {\r\n  text = clean(text);\r\n  return parseCss(lex(text), text);\r\n}\r\n\r\n// remove stuff we don't care about that may hinder parsing\r\nfunction clean(cssText) {\r\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\r\n}\r\n\r\n// super simple {...} lexer that returns a node tree\r\nfunction lex(text) {\r\n  let root = {\r\n    start: 0,\r\n    end: text.length\r\n  };\r\n  let n = root;\r\n  for (let i = 0, l = text.length; i < l; i++) {\r\n    if (text[i] === OPEN_BRACE) {\r\n      if (!n.rules) {\r\n        n.rules = [];\r\n      }\r\n      let p = n;\r\n      let previous = p.rules[p.rules.length - 1];\r\n      n = {\r\n        start: i + 1,\r\n        parent: p,\r\n        previous: previous\r\n      };\r\n      p.rules.push(n);\r\n    } else if (text[i] === CLOSE_BRACE) {\r\n      n.end = i + 1;\r\n      n = n.parent || root;\r\n    }\r\n  }\r\n  return root;\r\n}\r\n\r\n// add selectors/cssText to node tree\r\nfunction parseCss(node, text) {\r\n  let t = text.substring(node.start, node.end - 1);\r\n  node.parsedCssText = node.cssText = t.trim();\r\n  if (node.parent) {\r\n    let ss = node.previous ? node.previous.end : node.parent.start;\r\n    t = text.substring(ss, node.start - 1);\r\n    t = _expandUnicodeEscapes(t);\r\n    t = t.replace(RX.multipleSpaces, ' ');\r\n    // TODO(sorvell): ad hoc; make selector include only after last ;\r\n    // helps with mixin syntax\r\n    t = t.substring(t.lastIndexOf(';') + 1);\r\n    let s = node.parsedSelector = node.selector = t.trim();\r\n    node.atRule = (s.indexOf(AT_START) === 0);\r\n    // note, support a subset of rule types...\r\n    if (node.atRule) {\r\n      if (s.indexOf(MEDIA_START) === 0) {\r\n        node.type = types.MEDIA_RULE;\r\n      } else if (s.match(RX.keyframesRule)) {\r\n        node.type = types.KEYFRAMES_RULE;\r\n        node.keyframesName =\r\n          node.selector.split(RX.multipleSpaces).pop();\r\n      }\r\n    } else {\r\n      if (s.indexOf(VAR_START) === 0) {\r\n        node.type = types.MIXIN_RULE;\r\n      } else {\r\n        node.type = types.STYLE_RULE;\r\n      }\r\n    }\r\n  }\r\n  let r$ = node.rules;\r\n  if (r$) {\r\n    for (let i = 0, l = r$.length, r;\r\n      (i < l) && (r = r$[i]); i++) {\r\n      parseCss(r, text);\r\n    }\r\n  }\r\n  return node;\r\n}\r\n\r\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\r\n// expanded form that doesn't require trailing space `\\000033`\r\nfunction _expandUnicodeEscapes(s) {\r\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\r\n    let code = arguments[1],\r\n      repeat = 6 - code.length;\r\n    while (repeat--) {\r\n      code = '0' + code;\r\n    }\r\n    return '\\\\' + code;\r\n  });\r\n}\r\n\r\n// stringify parsed css.\r\nexport function stringify(node, preserveProperties, text) {\r\n  text = text || '';\r\n  // calc rule cssText\r\n  let cssText = '';\r\n  if (node.cssText || node.rules) {\r\n    let r$ = node.rules;\r\n    if (r$ && !_hasMixinRules(r$)) {\r\n      for (let i = 0, l = r$.length, r;\r\n        (i < l) && (r = r$[i]); i++) {\r\n        cssText = stringify(r, preserveProperties, cssText);\r\n      }\r\n    } else {\r\n      cssText = preserveProperties ? node.cssText :\r\n        removeCustomProps(node.cssText);\r\n      cssText = cssText.trim();\r\n      if (cssText) {\r\n        cssText = '  ' + cssText + '\\n';\r\n      }\r\n    }\r\n  }\r\n  // emit rule if there is cssText\r\n  if (cssText) {\r\n    if (node.selector) {\r\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\r\n    }\r\n    text += cssText;\r\n    if (node.selector) {\r\n      text += CLOSE_BRACE + '\\n\\n';\r\n    }\r\n  }\r\n  return text;\r\n}\r\n\r\nfunction _hasMixinRules(rules) {\r\n  return rules[0].selector.indexOf(VAR_START) === 0;\r\n}\r\n\r\nfunction removeCustomProps(cssText) {\r\n  cssText = removeCustomPropAssignment(cssText);\r\n  return removeCustomPropApply(cssText);\r\n}\r\n\r\nexport function removeCustomPropAssignment(cssText) {\r\n  return cssText\r\n    .replace(RX.customProp, '')\r\n    .replace(RX.mixinProp, '');\r\n}\r\n\r\nfunction removeCustomPropApply(cssText) {\r\n  return cssText\r\n    .replace(RX.mixinApply, '')\r\n    .replace(RX.varApply, '');\r\n}\r\n\r\nexport let types = {\r\n  STYLE_RULE: 1,\r\n  KEYFRAMES_RULE: 7,\r\n  MEDIA_RULE: 4,\r\n  MIXIN_RULE: 1000\r\n}\r\n\r\nlet OPEN_BRACE = '{';\r\nlet CLOSE_BRACE = '}';\r\n\r\n// helper regexp's\r\nlet RX = {\r\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\r\n  port: /@import[^;]*;/gim,\r\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\r\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\r\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\r\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\r\n  keyframesRule: /^@[^\\s]*keyframes/,\r\n  multipleSpaces: /\\s+/g\r\n}\r\n\r\nlet VAR_START = '--';\r\nlet MEDIA_START = '@media';\r\nlet AT_START = '@';\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nexport let nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);\r\n// chrome 49 has semi-working css vars, check if box-shadow works\r\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\r\nexport let nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\r\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\r\n\r\n// experimental support for native @apply\r\nfunction detectNativeApply() {\r\n  let style = document.createElement('style');\r\n  style.textContent = '.foo { @apply --foo }';\r\n  document.head.appendChild(style);\r\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\r\n  document.head.removeChild(style);\r\n  return nativeCssApply;\r\n}\r\n\r\nexport let nativeCssApply = false && detectNativeApply();\r\n\r\nfunction parseSettings(settings) {\r\n  if (settings) {\r\n    nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;\r\n    nativeShadow = nativeShadow && !settings.shimshadow;\r\n  }\r\n}\r\n\r\nif (window.ShadyCSS) {\r\n  parseSettings(window.ShadyCSS);\r\n} else if (window.WebComponents) {\r\n  parseSettings(window.WebComponents.flags);\r\n}\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {nativeShadow, nativeCssVariables} from './style-settings'\r\nimport {parse, stringify, types} from './css-parse'\r\n\r\nexport function toCssText (rules, callback) {\r\n  if (typeof rules === 'string') {\r\n    rules = parse(rules);\r\n  }\r\n  if (callback) {\r\n    forEachRule(rules, callback);\r\n  }\r\n  return stringify(rules, nativeCssVariables);\r\n}\r\n\r\nexport function rulesForStyle(style) {\r\n  if (!style.__cssRules && style.textContent) {\r\n    style.__cssRules = parse(style.textContent);\r\n  }\r\n  return style.__cssRules;\r\n}\r\n\r\n// Tests if a rule is a keyframes selector, which looks almost exactly\r\n// like a normal selector but is not (it has nothing to do with scoping\r\n// for example).\r\nexport function isKeyframesSelector(rule) {\r\n  return rule.parent &&\r\n  rule.parent.type === types.KEYFRAMES_RULE;\r\n}\r\n\r\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\r\n  if (!node) {\r\n    return;\r\n  }\r\n  let skipRules = false;\r\n  if (onlyActiveRules) {\r\n    if (node.type === types.MEDIA_RULE) {\r\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\r\n      if (matchMedia) {\r\n        // if rule is a non matching @media rule, skip subrules\r\n        if (!window.matchMedia(matchMedia[1]).matches) {\r\n          skipRules = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (node.type === types.STYLE_RULE) {\r\n    styleRuleCallback(node);\r\n  } else if (keyframesRuleCallback &&\r\n    node.type === types.KEYFRAMES_RULE) {\r\n    keyframesRuleCallback(node);\r\n  } else if (node.type === types.MIXIN_RULE) {\r\n    skipRules = true;\r\n  }\r\n  let r$ = node.rules;\r\n  if (r$ && !skipRules) {\r\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\r\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\r\n    }\r\n  }\r\n}\r\n\r\n// add a string of cssText to the document.\r\nexport function applyCss(cssText, moniker, target, contextNode) {\r\n  let style = createScopeStyle(cssText, moniker);\r\n  return applyStyle(style, target, contextNode);\r\n}\r\n\r\nexport function applyStyle(style, target, contextNode) {\r\n  target = target || document.head;\r\n  let after = (contextNode && contextNode.nextSibling) ||\r\n  target.firstChild;\r\n  lastHeadApplyNode = style;\r\n  return target.insertBefore(style, after);\r\n}\r\n\r\nexport function createScopeStyle(cssText, moniker) {\r\n  let style = document.createElement('style');\r\n  if (moniker) {\r\n    style.setAttribute('scope', moniker);\r\n  }\r\n  style.textContent = cssText;\r\n  return style;\r\n}\r\n\r\nlet lastHeadApplyNode = null;\r\n\r\n// insert a comment node as a styling position placeholder.\r\nexport function applyStylePlaceHolder(moniker) {\r\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\r\n    moniker + ' ');\r\n  let after = lastHeadApplyNode ?\r\n    lastHeadApplyNode.nextSibling : null;\r\n  let scope = document.head;\r\n  scope.insertBefore(placeHolder, after || scope.firstChild);\r\n  lastHeadApplyNode = placeHolder;\r\n  return placeHolder;\r\n}\r\n\r\nexport function isTargetedBuild(buildType) {\r\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\r\n}\r\n\r\n// cssBuildTypeForModule: function (module) {\r\n//   let dm = Polymer.DomModule.import(module);\r\n//   if (dm) {\r\n//     return getCssBuildType(dm);\r\n//   }\r\n// },\r\n//\r\nexport function getCssBuildType(element) {\r\n  return element.getAttribute('css-build');\r\n}\r\n\r\n// Walk from text[start] matching parens\r\n// returns position of the outer end paren\r\nfunction findMatchingParen(text, start) {\r\n  let level = 0;\r\n  for (let i=start, l=text.length; i < l; i++) {\r\n    if (text[i] === '(') {\r\n      level++;\r\n    } else if (text[i] === ')') {\r\n      if (--level === 0) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nexport function processVariableAndFallback(str, callback) {\r\n  // find 'var('\r\n  let start = str.indexOf('var(');\r\n  if (start === -1) {\r\n    // no var?, everything is prefix\r\n    return callback(str, '', '', '');\r\n  }\r\n  //${prefix}var(${inner})${suffix}\r\n  let end = findMatchingParen(str, start + 3);\r\n  let inner = str.substring(start + 4, end);\r\n  let prefix = str.substring(0, start);\r\n  // suffix may have other variables\r\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\r\n  let comma = inner.indexOf(',');\r\n  // value and fallback args should be trimmed to match in property lookup\r\n  if (comma === -1) {\r\n    // variable, no fallback\r\n    return callback(prefix, inner.trim(), '', suffix);\r\n  }\r\n  // var(${value},${fallback})\r\n  let value = inner.substring(0, comma).trim();\r\n  let fallback = inner.substring(comma + 1).trim();\r\n  return callback(prefix, value, fallback, suffix);\r\n}\r\n\r\nexport function setElementClassRaw(element, value) {\r\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\r\n  if (element.__nativeSetAttribute) {\r\n    element.__nativeSetAttribute('class', value);\r\n  } else {\r\n    element.setAttribute('class', value);\r\n  }\r\n}\r\n\r\nexport let rx = {\r\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\r\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\r\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\r\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\r\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\r\n  IS_VAR: /^--/,\r\n  BRACKETED: /\\{[^}]*\\}/g,\r\n  HOST_PREFIX: '(?:^|[^.#[:])',\r\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\r\n}\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport * as StyleUtil from './style-util'\r\nimport {nativeShadow} from './style-settings'\r\n\r\n/* Transforms ShadowDOM styling into ShadyDOM styling\r\n\r\n* scoping:\r\n\r\n  * elements in scope get scoping selector class=\"x-foo-scope\"\r\n  * selectors re-written as follows:\r\n\r\n    div button -> div.x-foo-scope button.x-foo-scope\r\n\r\n* :host -> scopeName\r\n\r\n* :host(...) -> scopeName...\r\n\r\n* ::slotted(...) -> scopeName > ...\r\n\r\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\r\n\r\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\r\n\r\n*/\r\nlet SCOPE_NAME = 'style-scope';\r\n\r\nexport let StyleTransformer = {\r\n\r\n  // Given a node and scope name, add a scoping class to each node\r\n  // in the tree. This facilitates transforming css into scoped rules.\r\n  dom: function(node, scope, shouldRemoveScope) {\r\n    // one time optimization to skip scoping...\r\n    if (node.__styleScoped) {\r\n      node.__styleScoped = null;\r\n    } else {\r\n      this._transformDom(node, scope || '', shouldRemoveScope);\r\n    }\r\n  },\r\n\r\n  _transformDom: function(node, selector, shouldRemoveScope) {\r\n    if (node.nodeType === Node.ELEMENT_NODE) {\r\n      this.element(node, selector, shouldRemoveScope);\r\n    }\r\n    let c$ = (node.localName === 'template') ?\r\n      (node.content || node._content).childNodes :\r\n      node.children || node.childNodes;\r\n    if (c$) {\r\n      for (let i=0; i<c$.length; i++) {\r\n        this._transformDom(c$[i], selector, shouldRemoveScope);\r\n      }\r\n    }\r\n  },\r\n\r\n  element: function(element, scope, shouldRemoveScope) {\r\n    // note: if using classes, we add both the general 'style-scope' class\r\n    // as well as the specific scope. This enables easy filtering of all\r\n    // `style-scope` elements\r\n    if (scope) {\r\n      // note: svg on IE does not have classList so fallback to class\r\n      if (element.classList) {\r\n        if (shouldRemoveScope) {\r\n          element.classList.remove(SCOPE_NAME);\r\n          element.classList.remove(scope);\r\n        } else {\r\n          element.classList.add(SCOPE_NAME);\r\n          element.classList.add(scope);\r\n        }\r\n      } else if (element.getAttribute) {\r\n        let c = element.getAttribute(CLASS);\r\n        if (shouldRemoveScope) {\r\n          if (c) {\r\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\r\n            StyleUtil.setElementClassRaw(element, newValue);\r\n          }\r\n        } else {\r\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\r\n          StyleUtil.setElementClassRaw(element, newValue);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  elementStyles: function(element, styleRules, callback) {\r\n    let cssBuildType = element.__cssBuild;\r\n    // no need to shim selectors if settings.useNativeShadow, also\r\n    // a shady css build will already have transformed selectors\r\n    // NOTE: This method may be called as part of static or property shimming.\r\n    // When there is a targeted build it will not be called for static shimming,\r\n    // but when the property shim is used it is called and should opt out of\r\n    // static shimming work when a proper build exists.\r\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\r\n    StyleUtil.toCssText(styleRules, callback) :\r\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\r\n    return cssText.trim();\r\n  },\r\n\r\n  // Given a string of cssText and a scoping string (scope), returns\r\n  // a string of scoped css where each selector is transformed to include\r\n  // a class created from the scope. ShadowDOM selectors are also transformed\r\n  // (e.g. :host) to use the scoping selector.\r\n  css: function(rules, scope, ext, callback) {\r\n    let hostScope = this._calcHostScope(scope, ext);\r\n    scope = this._calcElementScope(scope);\r\n    let self = this;\r\n    return StyleUtil.toCssText(rules, function(rule) {\r\n      if (!rule.isScoped) {\r\n        self.rule(rule, scope, hostScope);\r\n        rule.isScoped = true;\r\n      }\r\n      if (callback) {\r\n        callback(rule, scope, hostScope);\r\n      }\r\n    });\r\n  },\r\n\r\n  _calcElementScope: function (scope) {\r\n    if (scope) {\r\n      return CSS_CLASS_PREFIX + scope;\r\n    } else {\r\n      return '';\r\n    }\r\n  },\r\n\r\n  _calcHostScope: function(scope, ext) {\r\n    return ext ? '[is=' +  scope + ']' : scope;\r\n  },\r\n\r\n  rule: function (rule, scope, hostScope) {\r\n    this._transformRule(rule, this._transformComplexSelector,\r\n      scope, hostScope);\r\n  },\r\n\r\n  // transforms a css rule to a scoped rule.\r\n  _transformRule: function(rule, transformer, scope, hostScope) {\r\n    // NOTE: save transformedSelector for subsequent matching of elements\r\n    // against selectors (e.g. when calculating style properties)\r\n    rule.selector = rule.transformedSelector =\r\n      this._transformRuleCss(rule, transformer, scope, hostScope);\r\n  },\r\n\r\n  _transformRuleCss: function(rule, transformer, scope, hostScope) {\r\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\r\n    // we want to skip transformation of rules that appear in keyframes,\r\n    // because they are keyframe selectors, not element selectors.\r\n    if (!StyleUtil.isKeyframesSelector(rule)) {\r\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\r\n        p$[i] = transformer.call(this, p, scope, hostScope);\r\n      }\r\n    }\r\n    return p$.join(COMPLEX_SELECTOR_SEP);\r\n  },\r\n\r\n  _transformComplexSelector: function(selector, scope, hostScope) {\r\n    let stop = false;\r\n    selector = selector.trim();\r\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\r\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\r\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\r\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\r\n      if (!stop) {\r\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\r\n        stop = stop || info.stop;\r\n        c = info.combinator;\r\n        s = info.value;\r\n      }\r\n      return c + s;\r\n    });\r\n    return selector;\r\n  },\r\n\r\n  _transformCompoundSelector: function(selector, combinator, scope, hostScope) {\r\n    // replace :host with host scoping class\r\n    let slottedIndex = selector.indexOf(SLOTTED);\r\n    if (selector.indexOf(HOST) >= 0) {\r\n      selector = this._transformHostSelector(selector, hostScope);\r\n    // replace other selectors with scoping class\r\n    } else if (slottedIndex !== 0) {\r\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\r\n        selector;\r\n    }\r\n    // mark ::slotted() scope jump to replace with descendant selector + arg\r\n    // also ignore left-side combinator\r\n    let slotted = false;\r\n    if (slottedIndex >= 0) {\r\n      combinator = '';\r\n      slotted = true;\r\n    }\r\n    // process scope jumping selectors up to the scope jump and then stop\r\n    let stop;\r\n    if (slotted) {\r\n      stop = true;\r\n      if (slotted) {\r\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\r\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\r\n      }\r\n    }\r\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\r\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\r\n    return {value: selector, combinator, stop};\r\n  },\r\n\r\n  _transformSimpleSelector: function(selector, scope) {\r\n    let p$ = selector.split(PSEUDO_PREFIX);\r\n    p$[0] += scope;\r\n    return p$.join(PSEUDO_PREFIX);\r\n  },\r\n\r\n  // :host(...) -> scopeName...\r\n  _transformHostSelector: function(selector, hostScope) {\r\n    let m = selector.match(HOST_PAREN);\r\n    let paren = m && m[2].trim() || '';\r\n    if (paren) {\r\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\r\n        // paren starts with a type selector\r\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\r\n        // if the type selector is our hostScope then avoid pre-pending it\r\n        if (typeSelector === hostScope) {\r\n          return paren;\r\n        // otherwise, this selector should not match in this scope so\r\n        // output a bogus selector.\r\n        } else {\r\n          return SELECTOR_NO_MATCH;\r\n        }\r\n      } else {\r\n        // make sure to do a replace here to catch selectors like:\r\n        // `:host(.foo)::before`\r\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\r\n          return hostScope + paren;\r\n        });\r\n      }\r\n    // if no paren, do a straight :host replacement.\r\n    // TODO(sorvell): this should not strictly be necessary but\r\n    // it's needed to maintain support for `:host[foo]` type selectors\r\n    // which have been improperly used under Shady DOM. This should be\r\n    // deprecated.\r\n    } else {\r\n      return selector.replace(HOST, hostScope);\r\n    }\r\n  },\r\n\r\n  documentRule: function(rule) {\r\n    // reset selector in case this is redone.\r\n    rule.selector = rule.parsedSelector;\r\n    this.normalizeRootSelector(rule);\r\n    this._transformRule(rule, this._transformDocumentSelector);\r\n  },\r\n\r\n  normalizeRootSelector: function(rule) {\r\n    if (rule.selector === ROOT) {\r\n      rule.selector = 'html';\r\n    }\r\n  },\r\n\r\n  _transformDocumentSelector: function(selector) {\r\n    return selector.match(SLOTTED) ?\r\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\r\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\r\n  },\r\n  SCOPE_NAME: SCOPE_NAME\r\n};\r\n\r\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\r\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\r\nlet COMPLEX_SELECTOR_SEP = ',';\r\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\r\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\r\nlet HOST = ':host';\r\nlet ROOT = ':root';\r\nlet SLOTTED = '::slotted';\r\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\r\n// NOTE: this supports 1 nested () pair for things like\r\n// :host(:not([selected]), more general support requires\r\n// parsing which seems like overkill\r\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\r\n// similar to HOST_PAREN\r\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\r\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\r\nlet CSS_CLASS_PREFIX = '.';\r\nlet PSEUDO_PREFIX = ':';\r\nlet CLASS = 'class';\r\nlet SELECTOR_NO_MATCH = 'should_not_match';\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nexport default class StyleInfo {\r\n  static get(node) {\r\n    return node.__styleInfo;\r\n  }\r\n  static set(node, styleInfo) {\r\n    node.__styleInfo = styleInfo;\r\n    return styleInfo;\r\n  }\r\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\r\n    this.styleRules = ast || null;\r\n    this.placeholder = placeholder || null;\r\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\r\n    this.overrideStyleProperties = null;\r\n    this.elementName = elementName || '';\r\n    this.cssBuild = cssBuild || '';\r\n    this.typeExtension = typeExtension || '';\r\n    this.styleProperties = null;\r\n    this.scopeSelector = null;\r\n    this.customStyle = null;\r\n  }\r\n}\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {removeCustomPropAssignment} from './css-parse'\r\nimport {nativeShadow} from './style-settings'\r\nimport {StyleTransformer} from './style-transformer'\r\nimport * as StyleUtil from './style-util'\r\nimport StyleInfo from './style-info'\r\n\r\n// TODO: dedupe with shady\r\nlet p = window.Element.prototype;\r\nlet matchesSelector = p.matches || p.matchesSelector ||\r\n  p.mozMatchesSelector || p.msMatchesSelector ||\r\n  p.oMatchesSelector || p.webkitMatchesSelector;\r\n\r\nlet IS_IE = navigator.userAgent.match('Trident');\r\n\r\nexport let StyleProperties = {\r\n\r\n  // decorates styles with rule info and returns an array of used style\r\n  // property names\r\n  decorateStyles: function(rules) {\r\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\r\n    StyleUtil.forEachRule(rules, function(rule) {\r\n      self.decorateRule(rule);\r\n      // mark in-order position of ast rule in styles block, used for cache key\r\n      rule.index = ruleIndex++;\r\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\r\n    }, function onKeyframesRule(rule) {\r\n      keyframes.push(rule);\r\n    });\r\n    // Cache all found keyframes rules for later reference:\r\n    rules._keyframes = keyframes;\r\n    // return this list of property names *consumes* in these styles.\r\n    let names = [];\r\n    for (let i in props) {\r\n      names.push(i);\r\n    }\r\n    return names;\r\n  },\r\n\r\n  // decorate a single rule with property info\r\n  decorateRule: function(rule) {\r\n    if (rule.propertyInfo) {\r\n      return rule.propertyInfo;\r\n    }\r\n    let info = {}, properties = {};\r\n    let hasProperties = this.collectProperties(rule, properties);\r\n    if (hasProperties) {\r\n      info.properties = properties;\r\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\r\n      rule.rules = null;\r\n    }\r\n    info.cssText = this.collectCssText(rule);\r\n    rule.propertyInfo = info;\r\n    return info;\r\n  },\r\n\r\n  // collects the custom properties from a rule's cssText\r\n  collectProperties: function(rule, properties) {\r\n    let info = rule.propertyInfo;\r\n    if (info) {\r\n      if (info.properties) {\r\n        Object.assign(properties, info.properties);\r\n        return true;\r\n      }\r\n    } else {\r\n      let m, rx = this.rx.VAR_ASSIGN;\r\n      let cssText = rule.parsedCssText;\r\n      let value;\r\n      let any;\r\n      while ((m = rx.exec(cssText))) {\r\n        // note: group 2 is var, 3 is mixin\r\n        value = (m[2] || m[3]).trim();\r\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\r\n        if (value !== 'inherit' || value !== 'unset') {\r\n          properties[m[1].trim()] = value;\r\n        }\r\n        any = true;\r\n      }\r\n      return any;\r\n    }\r\n\r\n  },\r\n\r\n  // returns cssText of properties that consume variables/mixins\r\n  collectCssText: function(rule) {\r\n    return this.collectConsumingCssText(rule.parsedCssText);\r\n  },\r\n\r\n  // NOTE: we support consumption inside mixin assignment\r\n  // but not production, so strip out {...}\r\n  collectConsumingCssText: function(cssText) {\r\n    return cssText.replace(this.rx.BRACKETED, '')\r\n      .replace(this.rx.VAR_ASSIGN, '');\r\n  },\r\n\r\n  collectPropertiesInCssText: function(cssText, props) {\r\n    let m;\r\n    while ((m = this.rx.VAR_CONSUMED.exec(cssText))) {\r\n      let name = m[1];\r\n      // This regex catches all variable names, and following non-whitespace char\r\n      // If next char is not ':', then variable is a consumer\r\n      if (m[2] !== ':') {\r\n        props[name] = true;\r\n      }\r\n    }\r\n  },\r\n\r\n  // turns custom properties into realized values.\r\n  reify: function(props) {\r\n    // big perf optimization here: reify only *own* properties\r\n    // since this object has __proto__ of the element's scope properties\r\n    let names = Object.getOwnPropertyNames(props);\r\n    for (let i=0, n; i < names.length; i++) {\r\n      n = names[i];\r\n      props[n] = this.valueForProperty(props[n], props);\r\n    }\r\n  },\r\n\r\n  // given a property value, returns the reified value\r\n  // a property value may be:\r\n  // (1) a literal value like: red or 5px;\r\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\r\n  // var(--a, var(--b));\r\n  // (3) a literal mixin value like { properties }. Each of these properties\r\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\r\n  valueForProperty: function(property, props) {\r\n    // case (1) default\r\n    // case (3) defines a mixin and we have to reify the internals\r\n    if (property) {\r\n      if (property.indexOf(';') >=0) {\r\n        property = this.valueForProperties(property, props);\r\n      } else {\r\n        // case (2) variable\r\n        let self = this;\r\n        let fn = function(prefix, value, fallback, suffix) {\r\n          if (!value) {\r\n            return prefix + suffix;\r\n          }\r\n          let propertyValue = self.valueForProperty(props[value], props);\r\n          // if value is \"initial\", then the variable should be treated as unset\r\n          if (!propertyValue || propertyValue === 'initial') {\r\n            // fallback may be --a or var(--a) or literal\r\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\r\n            fallback;\r\n          } else if (propertyValue === 'apply-shim-inherit') {\r\n            // CSS build will replace `inherit` with `apply-shim-inherit`\r\n            // for use with native css variables.\r\n            // Since we have full control, we can use `inherit` directly.\r\n            propertyValue = 'inherit';\r\n          }\r\n          return prefix + (propertyValue || '') + suffix;\r\n        };\r\n        property = StyleUtil.processVariableAndFallback(property, fn);\r\n      }\r\n    }\r\n    return property && property.trim() || '';\r\n  },\r\n\r\n  // note: we do not yet support mixin within mixin\r\n  valueForProperties: function(property, props) {\r\n    let parts = property.split(';');\r\n    for (let i=0, p, m; i<parts.length; i++) {\r\n      if ((p = parts[i])) {\r\n        this.rx.MIXIN_MATCH.lastIndex = 0;\r\n        m = this.rx.MIXIN_MATCH.exec(p);\r\n        if (m) {\r\n          p = this.valueForProperty(props[m[1]], props);\r\n        } else {\r\n          let colon = p.indexOf(':');\r\n          if (colon !== -1) {\r\n            let pp = p.substring(colon);\r\n            pp = pp.trim();\r\n            pp = this.valueForProperty(pp, props) || pp;\r\n            p = p.substring(0, colon) + pp;\r\n          }\r\n        }\r\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\r\n          // strip trailing ;\r\n          p.slice(0, -1) :\r\n          p || '';\r\n      }\r\n    }\r\n    return parts.join(';');\r\n  },\r\n\r\n  applyProperties: function(rule, props) {\r\n    let output = '';\r\n    // dynamically added sheets may not be decorated so ensure they are.\r\n    if (!rule.propertyInfo) {\r\n      this.decorateRule(rule);\r\n    }\r\n    if (rule.propertyInfo.cssText) {\r\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\r\n    }\r\n    rule.cssText = output;\r\n  },\r\n\r\n  // Apply keyframe transformations to the cssText of a given rule. The\r\n  // keyframeTransforms object is a map of keyframe names to transformer\r\n  // functions which take in cssText and spit out transformed cssText.\r\n  applyKeyframeTransforms: function(rule, keyframeTransforms) {\r\n    let input = rule.cssText;\r\n    let output = rule.cssText;\r\n    if (rule.hasAnimations == null) {\r\n      // Cache whether or not the rule has any animations to begin with:\r\n      rule.hasAnimations = this.rx.ANIMATION_MATCH.test(input);\r\n    }\r\n    // If there are no animations referenced, we can skip transforms:\r\n    if (rule.hasAnimations) {\r\n      let transform;\r\n      // If we haven't transformed this rule before, we iterate over all\r\n      // transforms:\r\n      if (rule.keyframeNamesToTransform == null) {\r\n        rule.keyframeNamesToTransform = [];\r\n        for (let keyframe in keyframeTransforms) {\r\n          transform = keyframeTransforms[keyframe];\r\n          output = transform(input);\r\n          // If the transform actually changed the CSS text, we cache the\r\n          // transform name for future use:\r\n          if (input !== output) {\r\n            input = output;\r\n            rule.keyframeNamesToTransform.push(keyframe);\r\n          }\r\n        }\r\n      } else {\r\n        // If we already have a list of keyframe names that apply to this\r\n        // rule, we apply only those keyframe name transforms:\r\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\r\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\r\n          input = transform(input);\r\n        }\r\n        output = input;\r\n      }\r\n    }\r\n    rule.cssText = output;\r\n  },\r\n\r\n  // Test if the rules in these styles matches the given `element` and if so,\r\n  // collect any custom properties into `props`.\r\n  propertyDataFromStyles: function(rules, element) {\r\n    let props = {}, self = this;\r\n    // generates a unique key for these matches\r\n    let o = [];\r\n    // note: active rules excludes non-matching @media rules\r\n    StyleUtil.forEachRule(rules, function(rule) {\r\n      // TODO(sorvell): we could trim the set of rules at declaration\r\n      // time to only include ones that have properties\r\n      if (!rule.propertyInfo) {\r\n        self.decorateRule(rule);\r\n      }\r\n      // match element against transformedSelector: selector may contain\r\n      // unwanted uniquification and parsedSelector does not directly match\r\n      // for :host selectors.\r\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\r\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\r\n        if (matchesSelector.call(element, selectorToMatch)) {\r\n          self.collectProperties(rule, props);\r\n          // produce numeric key for these matches for lookup\r\n          addToBitMask(rule.index, o);\r\n        }\r\n      }\r\n    }, null, true);\r\n    return {properties: props, key: o};\r\n  },\r\n\r\n  whenHostOrRootRule: function(scope, rule, cssBuild, callback) {\r\n    if (!rule.propertyInfo) {\r\n      this.decorateRule(rule);\r\n    }\r\n    if (!rule.propertyInfo.properties) {\r\n      return;\r\n    }\r\n    let hostScope = scope.is ?\r\n    StyleTransformer._calcHostScope(scope.is, scope.extends) :\r\n    'html';\r\n    let parsedSelector = rule.parsedSelector;\r\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\r\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\r\n    // build info is either in scope (when scope is an element) or in the style\r\n    // when scope is the default scope; note: this allows default scope to have\r\n    // mixed mode built and unbuilt styles.\r\n    if (cssBuild === 'shady') {\r\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\r\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\r\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\r\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\r\n    }\r\n    if (cssBuild === 'shadow') {\r\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\r\n      isHost = isHost && !isRoot;\r\n    }\r\n    if (!isRoot && !isHost) {\r\n      return;\r\n    }\r\n    let selectorToMatch = hostScope;\r\n    if (isHost) {\r\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\r\n      if (nativeShadow && !rule.transformedSelector) {\r\n        // transform :host into a matchable selector\r\n        rule.transformedSelector =\r\n        StyleTransformer._transformRuleCss(\r\n          rule,\r\n          StyleTransformer._transformComplexSelector,\r\n          StyleTransformer._calcElementScope(scope.is),\r\n          hostScope\r\n        );\r\n      }\r\n      selectorToMatch = rule.transformedSelector || hostScope;\r\n    }\r\n    callback({\r\n      selector: selectorToMatch,\r\n      isHost: isHost,\r\n      isRoot: isRoot\r\n    });\r\n  },\r\n\r\n  hostAndRootPropertiesForScope: function(scope, rules) {\r\n    let hostProps = {}, rootProps = {}, self = this;\r\n    // note: active rules excludes non-matching @media rules\r\n    let cssBuild = rules && rules.__cssBuild;\r\n    StyleUtil.forEachRule(rules, function(rule) {\r\n      // if scope is StyleDefaults, use _element for matchesSelector\r\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\r\n        let element = scope._element || scope;\r\n        if (matchesSelector.call(element, info.selector)) {\r\n          if (info.isHost) {\r\n            self.collectProperties(rule, hostProps);\r\n          } else {\r\n            self.collectProperties(rule, rootProps);\r\n          }\r\n        }\r\n      });\r\n    }, null, true);\r\n    return {rootProps: rootProps, hostProps: hostProps};\r\n  },\r\n\r\n  transformStyles: function(element, properties, scopeSelector) {\r\n    let self = this;\r\n    let hostSelector = StyleTransformer\r\n      ._calcHostScope(element.is, element.extends);\r\n    let rxHostSelector = element.extends ?\r\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\r\n      hostSelector;\r\n    let hostRx = new RegExp(this.rx.HOST_PREFIX + rxHostSelector +\r\n      this.rx.HOST_SUFFIX);\r\n    let rules = StyleInfo.get(element).styleRules;\r\n    let keyframeTransforms =\r\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\r\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\r\n      self.applyProperties(rule, properties);\r\n      if (!nativeShadow &&\r\n          !StyleUtil.isKeyframesSelector(rule) &&\r\n          rule.cssText) {\r\n        // NOTE: keyframe transforms only scope munge animation names, so it\r\n        // is not necessary to apply them in ShadowDOM.\r\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\r\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\r\n      }\r\n    });\r\n  },\r\n\r\n  _elementKeyframeTransforms: function(element, rules, scopeSelector) {\r\n    let keyframesRules = rules._keyframes;\r\n    let keyframeTransforms = {};\r\n    if (!nativeShadow && keyframesRules) {\r\n      // For non-ShadowDOM, we transform all known keyframes rules in\r\n      // advance for the current scope. This allows us to catch keyframes\r\n      // rules that appear anywhere in the stylesheet:\r\n      for (let i = 0, keyframesRule = keyframesRules[i];\r\n           i < keyframesRules.length;\r\n           keyframesRule = keyframesRules[++i]) {\r\n        this._scopeKeyframes(keyframesRule, scopeSelector);\r\n        keyframeTransforms[keyframesRule.keyframesName] =\r\n            this._keyframesRuleTransformer(keyframesRule);\r\n      }\r\n    }\r\n    return keyframeTransforms;\r\n  },\r\n\r\n  // Generate a factory for transforming a chunk of CSS text to handle a\r\n  // particular scoped keyframes rule.\r\n  _keyframesRuleTransformer: function(keyframesRule) {\r\n    return function(cssText) {\r\n      return cssText.replace(\r\n          keyframesRule.keyframesNameRx,\r\n          keyframesRule.transformedKeyframesName);\r\n    };\r\n  },\r\n\r\n  // Transforms `@keyframes` names to be unique for the current host.\r\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\r\n  _scopeKeyframes: function(rule, scopeId) {\r\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\r\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\r\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\r\n    rule.selector = rule.transformedSelector.replace(\r\n        rule.keyframesName, rule.transformedKeyframesName);\r\n  },\r\n\r\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\r\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\r\n  // host selector: x-foo.wide -> .x-foo-42.wide\r\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\r\n  // (x-foo) to scope :host rules; this helps make property host rules\r\n  // have low specificity. They are overrideable by class selectors but,\r\n  // unfortunately, not by type selectors (e.g. overriding via\r\n  // `.special` is ok, but not by `x-foo`).\r\n  _scopeSelector: function(rule, hostRx, hostSelector, scopeId) {\r\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\r\n    let selector = rule.transformedSelector;\r\n    let scope = '.' + scopeId;\r\n    let parts = selector.split(',');\r\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\r\n      parts[i] = p.match(hostRx) ?\r\n        p.replace(hostSelector, scope) :\r\n        scope + ' ' + p;\r\n    }\r\n    rule.selector = parts.join(',');\r\n  },\r\n\r\n  applyElementScopeSelector: function(element, selector, old) {\r\n    let c = element.getAttribute('class') || '';\r\n    let v = c;\r\n    if (old) {\r\n      v = c.replace(\r\n        new RegExp('\\\\s*' + this.XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\r\n    }\r\n    v += (v ? ' ' : '') + this.XSCOPE_NAME + ' ' + selector;\r\n    if (c !== v) {\r\n      // hook from ShadyDOM\r\n      if (element.__nativeSetAttribute) {\r\n        element.__nativeSetAttribute('class', v);\r\n      } else {\r\n        element.setAttribute('class', v);\r\n      }\r\n    }\r\n  },\r\n\r\n  applyElementStyle: function(element, properties, selector, style) {\r\n    // calculate cssText to apply\r\n    let cssText = style ? style.textContent || '' :\r\n      this.transformStyles(element, properties, selector);\r\n    // if shady and we have a cached style that is not style, decrement\r\n    let styleInfo = StyleInfo.get(element);\r\n    let s = styleInfo.customStyle;\r\n    if (s && !nativeShadow && (s !== style)) {\r\n      s._useCount--;\r\n      if (s._useCount <= 0 && s.parentNode) {\r\n        s.parentNode.removeChild(s);\r\n      }\r\n    }\r\n    // apply styling always under native or if we generated style\r\n    // or the cached style is not in document(!)\r\n    if (nativeShadow) {\r\n      // update existing style only under native\r\n      if (styleInfo.customStyle) {\r\n        styleInfo.customStyle.textContent = cssText;\r\n        style = styleInfo.customStyle;\r\n      // otherwise, if we have css to apply, do so\r\n      } else if (cssText) {\r\n        // apply css after the scope style of the element to help with\r\n        // style precedence rules.\r\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\r\n          styleInfo.placeholder);\r\n      }\r\n    } else {\r\n      // shady and no cache hit\r\n      if (!style) {\r\n        // apply css after the scope style of the element to help with\r\n        // style precedence rules.\r\n        if (cssText) {\r\n          style = StyleUtil.applyCss(cssText, selector, null,\r\n            styleInfo.placeholder);\r\n        }\r\n      // shady and cache hit but not in document\r\n      } else if (!style.parentNode) {\r\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\r\n      }\r\n\r\n    }\r\n    // ensure this style is our custom style and increment its use count.\r\n    if (style) {\r\n      style._useCount = style._useCount || 0;\r\n      // increment use count if we changed styles\r\n      if (styleInfo.customStyle != style) {\r\n        style._useCount++;\r\n      }\r\n      styleInfo.customStyle = style;\r\n    }\r\n    // @media rules may be stale in IE 10 and 11\r\n    if (IS_IE) {\r\n      style.textContent = style.textContent;\r\n    }\r\n    return style;\r\n  },\r\n\r\n  applyCustomStyle: function(style, properties) {\r\n    let rules = StyleUtil.rulesForStyle(style);\r\n    let self = this;\r\n    style.textContent = StyleUtil.toCssText(rules, function(rule) {\r\n      let css = rule.cssText = rule.parsedCssText;\r\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\r\n        // remove property assignments\r\n        // so next function isn't confused\r\n        // NOTE: we have 3 categories of css:\r\n        // (1) normal properties,\r\n        // (2) custom property assignments (--foo: red;),\r\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\r\n        // In elements, 1 and 3 are separated for efficiency; here they\r\n        // are not and this makes this case unique.\r\n        css = removeCustomPropAssignment(css);\r\n        // replace with reified properties, scenario is same as mixin\r\n        rule.cssText = self.valueForProperties(css, properties);\r\n      }\r\n    });\r\n  },\r\n\r\n  rx: StyleUtil.rx,\r\n  XSCOPE_NAME: 'x-scope'\r\n};\r\n\r\nfunction addToBitMask(n, bits) {\r\n  let o = parseInt(n / 32);\r\n  let v = 1 << (n % 32);\r\n  bits[o] = (bits[o] || 0) | v;\r\n}\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nexport default {};\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {applyStylePlaceHolder} from './style-util'\r\nimport {nativeShadow} from './style-settings'\r\n\r\nlet placeholderMap = {};\r\n\r\nconst ce = window.customElements;\r\nif (ce && !nativeShadow) {\r\n  const origDefine = ce.define;\r\n  ce.define = function(name, clazz, options) {\r\n    placeholderMap[name] = applyStylePlaceHolder(name);\r\n    return origDefine.call(ce, name, clazz, options);\r\n  };\r\n}\r\n\r\nexport default placeholderMap;\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n'use strict';\r\n\r\nexport default class StyleCache {\r\n  constructor(typeMax = 100) {\r\n    // map element name -> [{properties, styleElement, scopeSelector}]\r\n    this.cache = {};\r\n    this.typeMax = typeMax;\r\n  }\r\n\r\n  _validate(cacheEntry, properties, ownPropertyNames) {\r\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\r\n      let pn = ownPropertyNames[idx];\r\n      if (cacheEntry.properties[pn] !== properties[pn]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  store(tagname, properties, styleElement, scopeSelector) {\r\n    let list = this.cache[tagname] || [];\r\n    list.push({properties, styleElement, scopeSelector});\r\n    if (list.length > this.typeMax) {\r\n      list.shift();\r\n    }\r\n    this.cache[tagname] = list;\r\n  }\r\n\r\n  fetch(tagname, properties, ownPropertyNames) {\r\n    let list = this.cache[tagname];\r\n    if (!list) {\r\n      return;\r\n    }\r\n    // reverse list for most-recent lookups\r\n    for (let idx = list.length - 1; idx >= 0; idx--) {\r\n      let entry = list[idx];\r\n      if (this._validate(entry, properties, ownPropertyNames)) {\r\n        return entry;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n/**\r\n * The apply shim simulates the behavior of `@apply` proposed at\r\n * https://tabatkins.github.io/specs/css-apply-rule/.\r\n * The approach is to convert a property like this:\r\n *\r\n *    --foo: {color: red; background: blue;}\r\n *\r\n * to this:\r\n *\r\n *    --foo_-_color: red;\r\n *    --foo_-_background: blue;\r\n *\r\n * Then where `@apply --foo` is used, that is converted to:\r\n *\r\n *    color: var(--foo_-_color);\r\n *    background: var(--foo_-_background);\r\n *\r\n * This approach generally works but there are some issues and limitations.\r\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\r\n * another element sets it to:\r\n *\r\n *    --foo: { border: 2px solid red; }\r\n *\r\n * We must now ensure that the color and background from the previous setting\r\n * do not apply. This is accomplished by changing the property set to this:\r\n *\r\n *    --foo_-_border: 2px solid red;\r\n *    --foo_-_color: initial;\r\n *    --foo_-_background: initial;\r\n *\r\n * This works but introduces one new issue.\r\n * Consider this setup at the point where the `@apply` is used:\r\n *\r\n *    background: orange;\r\n *    @apply --foo;\r\n *\r\n * In this case the background will be unset (initial) rather than the desired\r\n * `orange`. We address this by altering the property set to use a fallback\r\n * value like this:\r\n *\r\n *    color: var(--foo_-_color);\r\n *    background: var(--foo_-_background, orange);\r\n *    border: var(--foo_-_border);\r\n *\r\n * Note that the default is retained in the property set and the `background` is\r\n * the desired `orange`. This leads us to a limitation.\r\n *\r\n * Limitation 1:\r\n\r\n * Only properties in the rule where the `@apply`\r\n * is used are considered as default values.\r\n * If another rule matches the element and sets `background` with\r\n * less specificity than the rule in which `@apply` appears,\r\n * the `background` will not be set.\r\n *\r\n * Limitation 2:\r\n *\r\n * When using Polymer's `updateStyles` api, new properties may not be set for\r\n * `@apply` properties.\r\n\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {rx, forEachRule, processVariableAndFallback, rulesForStyle} from './style-util'\r\nimport templateMap from './template-map'\r\n\r\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\r\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\r\n\r\nlet APPLY_NAME_CLEAN = /;\\s*/m;\r\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\r\n\r\n// separator used between mixin-name and mixin-property-name when producing properties\r\n// NOTE: plain '-' may cause collisions in user styles\r\nlet MIXIN_VAR_SEP = '_-_';\r\n\r\n// map of mixin to property names\r\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\r\nclass MixinMap {\r\n  constructor() {\r\n    this._map = {};\r\n  }\r\n  set(name, props) {\r\n    name = name.trim();\r\n    this._map[name] = {\r\n      properties: props,\r\n      dependants: {}\r\n    }\r\n  }\r\n  get(name) {\r\n    name = name.trim();\r\n    return this._map[name];\r\n  }\r\n}\r\n\r\nclass ApplyShim {\r\n  constructor() {\r\n    this._currentTemplate = null;\r\n    this._measureElement = null;\r\n    this._map = new MixinMap();\r\n    this._separator = MIXIN_VAR_SEP;\r\n    this._boundProduceCssProperties = (\r\n      matchText, propertyName, valueProperty, valueMixin) =>\r\n        this._produceCssProperties(\r\n          matchText, propertyName, valueProperty, valueMixin);\r\n  }\r\n  transformStyle(style, elementName) {\r\n    let ast = rulesForStyle(style);\r\n    this.transformRules(ast, elementName);\r\n    return ast;\r\n  }\r\n  transformRules(rules, elementName) {\r\n    this._currentTemplate = templateMap[elementName];\r\n    forEachRule(rules, (r) => {\r\n      this.transformRule(r);\r\n    });\r\n    if (this._currentTemplate) {\r\n      this._currentTemplate.__applyShimInvalid = false;\r\n    }\r\n    this._currentTemplate = null;\r\n  }\r\n  transformRule(rule) {\r\n    rule.cssText = this.transformCssText(rule.parsedCssText);\r\n    // :root was only used for variable assignment in property shim,\r\n    // but generates invalid selectors with real properties.\r\n    // replace with `:host > *`, which serves the same effect\r\n    if (rule.selector === ':root') {\r\n      rule.selector = ':host > *';\r\n    }\r\n  }\r\n  transformCssText(cssText) {\r\n    // produce variables\r\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\r\n    // consume mixins\r\n    return this._consumeCssProperties(cssText);\r\n  }\r\n  _getInitialValueForProperty(property) {\r\n    if (!this._measureElement) {\r\n      this._measureElement = document.createElement('meta');\r\n      this._measureElement.style.all = 'initial';\r\n      document.head.appendChild(this._measureElement);\r\n    }\r\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\r\n  }\r\n  // replace mixin consumption with variable consumption\r\n  _consumeCssProperties(text) {\r\n    let m;\r\n    // loop over text until all mixins with defintions have been applied\r\n    while((m = MIXIN_MATCH.exec(text))) {\r\n      let matchText = m[0];\r\n      let mixinName = m[1];\r\n      let idx = m.index;\r\n      // collect properties before apply to be \"defaults\" if mixin might override them\r\n      // match includes a \"prefix\", so find the start and end positions of @apply\r\n      let applyPos = idx + matchText.indexOf('@apply');\r\n      let afterApplyPos = idx + matchText.length;\r\n      // find props defined before this @apply\r\n      let textBeforeApply = text.slice(0, applyPos);\r\n      let textAfterApply = text.slice(afterApplyPos);\r\n      let defaults = this._cssTextToMap(textBeforeApply);\r\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\r\n      // use regex match position to replace mixin, keep linear processing time\r\n      text = [textBeforeApply, replacement, textAfterApply].join('');\r\n      // move regex search to _after_ replacement\r\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\r\n    }\r\n    return text;\r\n  }\r\n  // produce variable consumption at the site of mixin consumption\r\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\r\n  // Example:\r\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\r\n  _atApplyToCssProperties(mixinName, fallbacks) {\r\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\r\n    let vars = [];\r\n    let mixinEntry = this._map.get(mixinName);\r\n    // if we depend on a mixin before it is created\r\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\r\n    if (!mixinEntry) {\r\n      this._map.set(mixinName, {});\r\n      mixinEntry = this._map.get(mixinName);\r\n    }\r\n    if (mixinEntry) {\r\n      if (this._currentTemplate) {\r\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\r\n      }\r\n      let p, parts, f;\r\n      for (p in mixinEntry.properties) {\r\n        f = fallbacks && fallbacks[p];\r\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\r\n        if (f) {\r\n          parts.push(',', f);\r\n        }\r\n        parts.push(')');\r\n        vars.push(parts.join(''));\r\n      }\r\n    }\r\n    return vars.join('; ');\r\n  }\r\n\r\n  _replaceInitialOrInherit(property, value) {\r\n    let match = INITIAL_INHERIT.exec(value);\r\n    if (match) {\r\n      if (match[1]) {\r\n        // initial\r\n        // replace `initial` with the concrete initial value for this property\r\n        value = ApplyShim._getInitialValueForProperty(property);\r\n      } else {\r\n        // inherit\r\n        // with this purposfully illegal value, the variable will be invalid at\r\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\r\n        // and for inheriting values, will behave similarly\r\n        // we cannot support the same behavior for non inheriting values like 'border'\r\n        value = 'apply-shim-inherit';\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n\r\n  // \"parse\" a mixin definition into a map of properties and values\r\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\r\n  _cssTextToMap(text) {\r\n    let props = text.split(';');\r\n    let property, value;\r\n    let out = {};\r\n    for (let i = 0, p, sp; i < props.length; i++) {\r\n      p = props[i];\r\n      if (p) {\r\n        sp = p.split(':');\r\n        // ignore lines that aren't definitions like @media\r\n        if (sp.length > 1) {\r\n          property = sp[0].trim();\r\n          // some properties may have ':' in the value, like data urls\r\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\r\n          out[property] = value;\r\n        }\r\n      }\r\n    }\r\n    return out;\r\n  }\r\n\r\n  _invalidateMixinEntry(mixinEntry) {\r\n    for (let elementName in mixinEntry.dependants) {\r\n      if (elementName !== this._currentTemplate) {\r\n        mixinEntry.dependants[elementName].__applyShimInvalid = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\r\n    // handle case where property value is a mixin\r\n    if (valueProperty) {\r\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\r\n      processVariableAndFallback(valueProperty, (prefix, value) => {\r\n        if (value && this._map.get(value)) {\r\n          valueMixin = '@apply ' + value + ';';\r\n        }\r\n      });\r\n    }\r\n    if (!valueMixin) {\r\n      return matchText;\r\n    }\r\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\r\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\r\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\r\n    let combinedProps = mixinValues;\r\n    let mixinEntry = this._map.get(propertyName);\r\n    let oldProps = mixinEntry && mixinEntry.properties;\r\n    if (oldProps) {\r\n      // NOTE: since we use mixin, the map of properties is updated here\r\n      // and this is what we want.\r\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\r\n    } else {\r\n      this._map.set(propertyName, combinedProps);\r\n    }\r\n    let out = [];\r\n    let p, v;\r\n    // set variables defined by current mixin\r\n    let needToInvalidate = false;\r\n    for (p in combinedProps) {\r\n      v = mixinValues[p];\r\n      // if property not defined by current mixin, set initial\r\n      if (v === undefined) {\r\n        v = 'initial';\r\n      }\r\n      if (oldProps && !(p in oldProps)) {\r\n        needToInvalidate = true;\r\n      }\r\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\r\n    }\r\n    if (needToInvalidate) {\r\n      this._invalidateMixinEntry(mixinEntry);\r\n    }\r\n    if (mixinEntry) {\r\n      mixinEntry.properties = combinedProps;\r\n    }\r\n    // because the mixinMap is global, the mixin might conflict with\r\n    // a different scope's simple variable definition:\r\n    // Example:\r\n    // some style somewhere:\r\n    // --mixin1:{ ... }\r\n    // --mixin2: var(--mixin1);\r\n    // some other element:\r\n    // --mixin1: 10px solid red;\r\n    // --foo: var(--mixin1);\r\n    // In this case, we leave the original variable definition in place.\r\n    if (valueProperty) {\r\n      prefix = matchText + ';' + prefix;\r\n    }\r\n    return prefix + out.join('; ') + ';';\r\n  }\r\n}\r\n\r\nlet applyShim = new ApplyShim();\r\nwindow['ApplyShim'] = applyShim;\r\nexport default applyShim;\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {nativeShadow} from './style-settings'\r\nimport {StyleTransformer} from './style-transformer'\r\n\r\nexport let flush = function() {};\r\n\r\nif (!nativeShadow) {\r\n  let elementNeedsScoping = (element) => {\r\n    return (element.classList &&\r\n      !element.classList.contains(StyleTransformer.SCOPE_NAME) ||\r\n      // note: necessary for IE11\r\n      (element instanceof SVGElement && (!element.hasAttribute('class') ||\r\n      element.getAttribute('class').indexOf(StyleTransformer.SCOPE_NAME) < 0)));\r\n  }\r\n\r\n  let handler = (mxns) => {\r\n    for (let x=0; x < mxns.length; x++) {\r\n      let mxn = mxns[x];\r\n      if (mxn.target === document.documentElement ||\r\n        mxn.target === document.head) {\r\n        continue;\r\n      }\r\n      for (let i=0; i < mxn.addedNodes.length; i++) {\r\n        let n = mxn.addedNodes[i];\r\n        if (elementNeedsScoping(n)) {\r\n          let root = n.getRootNode();\r\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\r\n            // may no longer be in a shadowroot\r\n            let host = root.host;\r\n            if (host) {\r\n              let scope = host.is || host.localName;\r\n              StyleTransformer.dom(n, scope);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      for (let i=0; i < mxn.removedNodes.length; i++) {\r\n        let n = mxn.removedNodes[i];\r\n        if (n.nodeType === Node.ELEMENT_NODE) {\r\n          let classes = undefined;\r\n          if (n.classList) {\r\n            classes = Array.from(n.classList);\r\n          } else if (n.hasAttribute('class')) {\r\n            classes = n.getAttribute('class').split(/\\s+/);\r\n          }\r\n          if (classes !== undefined) {\r\n            // NOTE: relies on the scoping class always being adjacent to the\r\n            // SCOPE_NAME class.\r\n            let classIdx = classes.indexOf(StyleTransformer.SCOPE_NAME);\r\n            if (classIdx >= 0) {\r\n              let scope = classes[classIdx + 1];\r\n              if (scope) {\r\n                StyleTransformer.dom(n, scope, true);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  let observer = new MutationObserver(handler);\r\n  let start = (node) => {\r\n    observer.observe(node, {childList: true, subtree: true});\r\n  }\r\n  let nativeCustomElements = (window.customElements &&\r\n    !window.customElements.flush);\r\n  // need to start immediately with native custom elements\r\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\r\n  // excessive mutations may be observed; this can be optimized via cooperation\r\n  // with the HTMLImports polyfill.\r\n  if (nativeCustomElements) {\r\n    start(document);\r\n  } else {\r\n    let delayedStart = () => {\r\n      start(document.body);\r\n    }\r\n    // use polyfill timing if it's available\r\n    if (window.HTMLImports) {\r\n      window.HTMLImports.whenReady(delayedStart);\r\n    // otherwise push beyond native imports being ready\r\n    // which requires RAF + readystate interactive.\r\n    } else {\r\n      requestAnimationFrame(function() {\r\n        if (document.readyState === 'loading') {\r\n          let listener = function() {\r\n            delayedStart();\r\n            document.removeEventListener('readystatechange', listener);\r\n          }\r\n          document.addEventListener('readystatechange', listener);\r\n        } else {\r\n          delayedStart();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  flush = function() {\r\n    handler(observer.takeRecords());\r\n  }\r\n}\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {parse} from './css-parse'\r\nimport {nativeShadow, nativeCssVariables, nativeCssApply} from './style-settings'\r\nimport {StyleTransformer} from './style-transformer'\r\nimport * as StyleUtil from './style-util'\r\nimport {StyleProperties} from './style-properties'\r\nimport templateMap from './template-map'\r\nimport placeholderMap from './style-placeholder'\r\nimport StyleInfo from './style-info'\r\nimport StyleCache from './style-cache'\r\n\r\n// TODO(dfreedm): consider spliting into separate global\r\nimport ApplyShim from './apply-shim'\r\nimport {flush} from './document-watcher'\r\n\r\nlet styleCache = new StyleCache();\r\n\r\nexport let ShadyCSS = {\r\n  flush: flush,\r\n  scopeCounter: {},\r\n  nativeShadow: nativeShadow,\r\n  nativeCss: nativeCssVariables,\r\n  nativeCssApply: nativeCssApply,\r\n  _documentOwner: document.documentElement,\r\n  _documentOwnerStyleInfo: StyleInfo.set(document.documentElement, new StyleInfo({rules: []})),\r\n  _generateScopeSelector(name) {\r\n    let id = this.scopeCounter[name] = (this.scopeCounter[name] || 0) + 1;\r\n    return name + '-' + id;\r\n  },\r\n  getStyleAst(style) {\r\n    return StyleUtil.rulesForStyle(style);\r\n  },\r\n  styleAstToString(ast) {\r\n    return StyleUtil.toCssText(ast);\r\n  },\r\n  _gatherStyles(template) {\r\n    let styles = template.content.querySelectorAll('style');\r\n    let cssText = [];\r\n    for (let i = 0; i < styles.length; i++) {\r\n      let s = styles[i];\r\n      cssText.push(s.textContent);\r\n      s.parentNode.removeChild(s);\r\n    }\r\n    return cssText.join('').trim();\r\n  },\r\n  _getCssBuild(template) {\r\n    let style = template.content.querySelector('style');\r\n    if (!style) {\r\n      return '';\r\n    }\r\n    return style.getAttribute('css-build') || '';\r\n  },\r\n  prepareTemplate(template, elementName, typeExtension) {\r\n    if (template._prepared) {\r\n      return;\r\n    }\r\n    template._prepared = true;\r\n    template.name = elementName;\r\n    template.extends = typeExtension;\r\n    templateMap[elementName] = template;\r\n    let cssBuild = this._getCssBuild(template);\r\n    let cssText = this._gatherStyles(template);\r\n    let info = {\r\n      is: elementName,\r\n      extends: typeExtension,\r\n      __cssBuild: cssBuild,\r\n    };\r\n    if (!this.nativeShadow) {\r\n      StyleTransformer.dom(template.content, elementName);\r\n    }\r\n    let ast = parse(cssText);\r\n    if (this.nativeCss && !this.nativeCssApply) {\r\n      ApplyShim.transformRules(ast, elementName);\r\n    }\r\n    template._styleAst = ast;\r\n\r\n    let ownPropertyNames = [];\r\n    if (!this.nativeCss) {\r\n      ownPropertyNames = StyleProperties.decorateStyles(template._styleAst, info);\r\n    }\r\n    if (!ownPropertyNames.length || this.nativeCss) {\r\n      let root = this.nativeShadow ? template.content : null;\r\n      let placeholder = placeholderMap[elementName];\r\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\r\n      template._style = style;\r\n    }\r\n    template._ownPropertyNames = ownPropertyNames;\r\n  },\r\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\r\n    let cssText = StyleTransformer.elementStyles(info, rules);\r\n    if (cssText.length) {\r\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\r\n    }\r\n  },\r\n  _prepareHost(host) {\r\n    let is = host.getAttribute('is') || host.localName;\r\n    let typeExtension;\r\n    if (is !== host.localName) {\r\n      typeExtension = host.localName;\r\n    }\r\n    let placeholder = placeholderMap[is];\r\n    let template = templateMap[is];\r\n    let ast;\r\n    let ownStylePropertyNames;\r\n    let cssBuild;\r\n    if (template) {\r\n      ast = template._styleAst;\r\n      ownStylePropertyNames = template._ownPropertyNames;\r\n      cssBuild = template._cssBuild;\r\n    }\r\n    return StyleInfo.set(host,\r\n      new StyleInfo(\r\n        ast,\r\n        placeholder,\r\n        ownStylePropertyNames,\r\n        is,\r\n        typeExtension,\r\n        cssBuild\r\n      )\r\n    );\r\n  },\r\n  applyStyle(host, overrideProps) {\r\n    let is = host.getAttribute('is') || host.localName;\r\n    if (window.CustomStyle) {\r\n      let CS = window.CustomStyle;\r\n      if (CS._documentDirty) {\r\n        CS.findStyles();\r\n        if (!this.nativeCss) {\r\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\r\n        } else if (!this.nativeCssApply) {\r\n          CS._revalidateApplyShim();\r\n        }\r\n        CS.applyStyles();\r\n        CS._documentDirty = false;\r\n      }\r\n    }\r\n    let styleInfo = StyleInfo.get(host);\r\n    let hasApplied = Boolean(styleInfo);\r\n    if (!styleInfo) {\r\n      styleInfo = this._prepareHost(host);\r\n    }\r\n    if (overrideProps) {\r\n      styleInfo.overrideStyleProperties =\r\n        styleInfo.overrideStyleProperties || {};\r\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\r\n    }\r\n    if (this.nativeCss) {\r\n      let template = templateMap[is];\r\n      if (template && template.__applyShimInvalid && template._style) {\r\n        // update template\r\n        ApplyShim.transformRules(template._styleAst, is);\r\n        template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\r\n        // update instance if native shadowdom\r\n        if (this.nativeShadow) {\r\n          let style = host.shadowRoot.querySelector('style');\r\n          style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\r\n        }\r\n        styleInfo.styleRules = template._styleAst;\r\n      }\r\n      this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\r\n    } else {\r\n      this._updateProperties(host, styleInfo);\r\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\r\n        // TODO: use caching\r\n        this._applyStyleProperties(host, styleInfo);\r\n      }\r\n    }\r\n    if (hasApplied) {\r\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\r\n      // note: some elements may not have a root!\r\n      if (root) {\r\n        this._applyToDescendants(root);\r\n      }\r\n    }\r\n  },\r\n  _applyToDescendants(root) {\r\n    let c$ = root.children;\r\n    for (let i = 0, c; i < c$.length; i++) {\r\n      c = c$[i];\r\n      if (c.shadowRoot) {\r\n        this.applyStyle(c);\r\n      }\r\n      this._applyToDescendants(c);\r\n    }\r\n  },\r\n  _styleOwnerForNode(node) {\r\n    let root = node.getRootNode();\r\n    let host = root.host;\r\n    if (host) {\r\n      if (StyleInfo.get(host)) {\r\n        return host;\r\n      } else {\r\n        return this._styleOwnerForNode(host);\r\n      }\r\n    }\r\n    return this._documentOwner;\r\n  },\r\n  _isRootOwner(node) {\r\n    return (node === this._documentOwner);\r\n  },\r\n  _applyStyleProperties(host, styleInfo) {\r\n    let is = host.getAttribute('is') || host.localName;\r\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\r\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\r\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\r\n    let oldScopeSelector = styleInfo.scopeSelector;\r\n    // only generate new scope if cached style is not found\r\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\r\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\r\n    if (!this.nativeShadow) {\r\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\r\n    }\r\n    if (!cacheEntry) {\r\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\r\n    }\r\n    return style;\r\n  },\r\n  _updateProperties(host, styleInfo) {\r\n    let owner = this._styleOwnerForNode(host);\r\n    let ownerStyleInfo = StyleInfo.get(owner);\r\n    let ownerProperties = ownerStyleInfo.styleProperties;\r\n    let props = Object.create(ownerProperties || null);\r\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\r\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\r\n    let propertiesMatchingHost = propertyData.properties\r\n    Object.assign(\r\n      props,\r\n      hostAndRootProps.hostProps,\r\n      propertiesMatchingHost,\r\n      hostAndRootProps.rootProps\r\n    );\r\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\r\n    StyleProperties.reify(props);\r\n    styleInfo.styleProperties = props;\r\n  },\r\n  _mixinOverrideStyles(props, overrides) {\r\n    for (let p in overrides) {\r\n      let v = overrides[p];\r\n      // skip override props if they are not truthy or 0\r\n      // in order to fall back to inherited values\r\n      if (v || v === 0) {\r\n        props[p] = v;\r\n      }\r\n    }\r\n  },\r\n  _updateNativeProperties(element, properties) {\r\n    // remove previous properties\r\n    for (let p in properties) {\r\n      // NOTE: for bc with shim, don't apply null values.\r\n      if (p === null) {\r\n        element.style.removeProperty(p);\r\n      } else {\r\n        element.style.setProperty(p, properties[p]);\r\n      }\r\n    }\r\n  },\r\n  updateStyles(properties) {\r\n    if (window.CustomStyle) {\r\n      window.CustomStyle._documentDirty = true;\r\n    }\r\n    this.applyStyle(this._documentOwner, properties);\r\n  },\r\n  /* Custom Style operations */\r\n  _transformCustomStyleForDocument(style) {\r\n    let ast = StyleUtil.rulesForStyle(style);\r\n    StyleUtil.forEachRule(ast, (rule) => {\r\n      if (nativeShadow) {\r\n        StyleTransformer.normalizeRootSelector(rule);\r\n      } else {\r\n        StyleTransformer.documentRule(rule);\r\n      }\r\n      if (this.nativeCss && !this.nativeCssApply) {\r\n        ApplyShim.transformRule(rule);\r\n      }\r\n    });\r\n    if (this.nativeCss) {\r\n      style.textContent = StyleUtil.toCssText(ast);\r\n    } else {\r\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\r\n    }\r\n  },\r\n  _revalidateApplyShim(style) {\r\n    if (this.nativeCss && !this.nativeCssApply) {\r\n      let ast = StyleUtil.rulesForStyle(style);\r\n      ApplyShim.transformRules(ast);\r\n      style.textContent = StyleUtil.toCssText(ast);\r\n    }\r\n  },\r\n  _applyCustomStyleToDocument(style) {\r\n    if (!this.nativeCss) {\r\n      StyleProperties.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\r\n    }\r\n  },\r\n  getComputedStyleValue(element, property) {\r\n    let value;\r\n    if (!this.nativeCss) {\r\n      // element is either a style host, or an ancestor of a style host\r\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\r\n      value = styleInfo.styleProperties[property];\r\n    }\r\n    // fall back to the property value from the computed styling\r\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\r\n    // trim whitespace that can come after the `:` in css\r\n    // example: padding: 2px -> \" 2px\"\r\n    return value.trim();\r\n  },\r\n  // given an element and a classString, replaces\r\n  // the element's class with the provided classString and adds\r\n  // any necessary ShadyCSS static and property based scoping selectors\r\n  setElementClass(element, classString) {\r\n    let root = element.getRootNode();\r\n    let classes = classString ? classString.split(/\\s/) : [];\r\n    let scopeName = root.host && root.host.localName;\r\n    // If no scope, try to discover scope name from existing class.\r\n    // This can occur if, for example, a template stamped element that\r\n    // has been scoped is manipulated when not in a root.\r\n    if (!scopeName) {\r\n      var classAttr = element.getAttribute('class');\r\n      if (classAttr) {\r\n        let k$ = classAttr.split(/\\s/);\r\n        for (let i=0; i < k$.length; i++) {\r\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\r\n            scopeName = k$[i+1];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (scopeName) {\r\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\r\n    }\r\n    if (!this.nativeCss) {\r\n      let styleInfo = StyleInfo.get(element);\r\n      if (styleInfo && styleInfo.scopeSelector) {\r\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\r\n      }\r\n    }\r\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\r\n  },\r\n  _styleInfoForNode(node) {\r\n    return StyleInfo.get(node);\r\n  }\r\n}\r\n\r\nwindow['ShadyCSS'] = ShadyCSS;\r\n","/**\r\n@license\r\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n/*\r\nWrapper over <style> elements to co-operate with ShadyCSS\r\n\r\nExample:\r\n<custom-style>\r\n  <style>\r\n  ...\r\n  </style>\r\n</custom-style>\r\n*/\r\n\r\n'use strict';\r\n\r\nlet ShadyCSS = window.ShadyCSS;\r\n\r\nlet enqueued = false;\r\n\r\nlet customStyles = [];\r\n\r\nlet hookFn = null;\r\n\r\n/*\r\nIf a page only has <custom-style> elements, it will flash unstyled content,\r\nas all the instances will boot asynchronously after page load.\r\n\r\nCalling ShadyCSS.updateStyles() will force the work to happen synchronously\r\n*/\r\nfunction enqueueDocumentValidation() {\r\n  if (enqueued) {\r\n    return;\r\n  }\r\n  enqueued = true;\r\n  if (window.HTMLImports) {\r\n    window.HTMLImports.whenReady(validateDocument);\r\n  } else if (document.readyState === 'complete') {\r\n    validateDocument();\r\n  } else {\r\n    document.addEventListener('readystatechange', () => {\r\n      if (document.readyState === 'complete') {\r\n        validateDocument();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction validateDocument() {\r\n  requestAnimationFrame(() => {\r\n    if (enqueued || ShadyCSS._elementsHaveApplied) {\r\n      ShadyCSS.updateStyles();\r\n    }\r\n    enqueued = false;\r\n  });\r\n}\r\n\r\nclass CustomStyle extends HTMLElement {\r\n  static get _customStyles() {\r\n    return customStyles;\r\n  }\r\n  static get processHook() {\r\n    return hookFn;\r\n  }\r\n  static set processHook(fn) {\r\n    hookFn = fn;\r\n  }\r\n  static get _documentDirty() {\r\n    return enqueued;\r\n  }\r\n  static findStyles() {\r\n    for (let i = 0; i < customStyles.length; i++) {\r\n      let c = customStyles[i];\r\n      if (!c._style) {\r\n        let style = c.querySelector('style');\r\n        if (!style) {\r\n          continue;\r\n        }\r\n        // HTMLImports polyfill may have cloned the style into the main document,\r\n        // which is referenced with __appliedElement.\r\n        // Also, we must copy over the attributes.\r\n        if (style.__appliedElement) {\r\n          for (let i = 0; i < style.attributes.length; i++) {\r\n            let attr = style.attributes[i];\r\n            style.__appliedElement.setAttribute(attr.name, attr.value);\r\n          }\r\n        }\r\n        c._style = style.__appliedElement || style;\r\n        if (hookFn) {\r\n          hookFn(c._style);\r\n        }\r\n        ShadyCSS._transformCustomStyleForDocument(c._style);\r\n      }\r\n    }\r\n  }\r\n  static _revalidateApplyShim() {\r\n    for (let i = 0; i < customStyles.length; i++) {\r\n      let c = customStyles[i];\r\n      if (c._style) {\r\n        ShadyCSS._revalidateApplyShim(c._style);\r\n      }\r\n    }\r\n  }\r\n  static applyStyles() {\r\n    for (let i = 0; i < customStyles.length; i++) {\r\n      let c = customStyles[i];\r\n      if (c._style) {\r\n        ShadyCSS._applyCustomStyleToDocument(c._style);\r\n      }\r\n    }\r\n    enqueued = false;\r\n  }\r\n  constructor() {\r\n    super();\r\n    customStyles.push(this);\r\n    enqueueDocumentValidation();\r\n  }\r\n}\r\n\r\nwindow['CustomStyle'] = CustomStyle;\r\nwindow.customElements.define('custom-style', CustomStyle);"]}